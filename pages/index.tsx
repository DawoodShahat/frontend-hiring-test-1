import { useState, useEffect } from "react";
import type { NextPage } from "next";
import Head from "next/head";

import ReactPaginate from "react-paginate";

import CallsTable from "../components/table";
import ContentBox from "../components/common/ContentBox";
import { getCalls } from "../api";

// import Pusher from "pusher-js";

// const pusher = new Pusher("d44e3d910d38a928e0be", {
//   cluster: "eu",
//   userAuthentication: {
//     endpoint: "https://frontend-test-api.aircall.io/pusher/auth",
//     transport: "ajax",
//     params: {},
//     headers: {},
//     customHandler: null,
//   },
//   forceTLS: true
// });

// pusher.signin();


// const privateChannel = pusher.subscribe('private-aircall');

// privateChannel.bind('update-call', (data) => {
//   console.log(data);
// });

const Home: NextPage = () => {
  const [loading, setLoading] = useState(false);
  const [calls, setCalls] = useState([]);
  const [pageCount, setPageCount] = useState(0);
  const [pageOffset, setPageOffset] = useState(0);

  const itemsPerPage = 10;

  async function fetchCalls() {
    try {
      setLoading(true);
      const res: any = await getCalls(pageOffset, itemsPerPage);
      setCalls(res.nodes);
      setPageCount(Math.floor(Number(res.totalCount / itemsPerPage)) + 1);
    } catch (err) {
      console.error(err);
    } finally {
      setLoading(false);
    }
  }

  const handlePageClick = ({ selected }) => {
    setPageOffset(selected * itemsPerPage);
  };

  useEffect(() => {
    fetchCalls();
  }, [pageOffset]);

  return (
    <div>
      <Head>
        <title>Turing Tech</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <ContentBox>
          <header className="page-header">
            <h1>Calls</h1>
          </header>

          <CallsTable loading={loading} data={calls} />

          <ReactPaginate
            previousLabel="Previous"
            nextLabel="Next"
            pageClassName="page-item"
            pageLinkClassName="page-link"
            previousClassName="page-item"
            previousLinkClassName="page-link"
            nextClassName="page-item"
            nextLinkClassName="page-link"
            breakLabel="..."
            breakClassName="page-item"
            breakLinkClassName="page-link"
            pageCount={pageCount}
            marginPagesDisplayed={2}
            pageRangeDisplayed={3}
            onPageChange={handlePageClick}
            containerClassName="pagination"
            activeClassName="active"
          />
        </ContentBox>
      </main>
    </div>
  );
};

export default Home;
